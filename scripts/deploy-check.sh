#!/bin/bash

# Deployment Readiness Validation Script for DueProcessAI123
# This script validates that the project is ready for deployment

echo "üöÄ Deployment Readiness Check for DueProcessAI123"
echo "=================================================="

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: package.json not found. Please run this script from the project root."
    exit 1
fi

echo "‚úÖ Found package.json"

# Check Node.js version
echo "üì¶ Checking Node.js version..."
node_version=$(node --version)
echo "   Node.js version: $node_version"

# Check npm version  
echo "üì¶ Checking npm version..."
npm_version=$(npm --version)
echo "   npm version: $npm_version"

# Install dependencies
echo "üì¶ Installing dependencies..."
if npm install --silent; then
    echo "‚úÖ Dependencies installed successfully"
else
    echo "‚ùå Failed to install dependencies"
    exit 1
fi

# Run linting
echo "üîç Running ESLint..."
if npm run lint --silent; then
    echo "‚úÖ Code linting passed"
else
    echo "‚ùå Code linting failed"
    exit 1
fi

# Run build
echo "üèóÔ∏è  Building project..."
if npm run build --silent; then
    echo "‚úÖ Build completed successfully"
else
    echo "‚ùå Build failed"
    exit 1
fi

# Check for essential files
echo "üìã Checking deployment files..."

# Check for .env.example
if [ -f ".env.example" ]; then
    echo "‚úÖ .env.example found"
else
    echo "‚ö†Ô∏è  .env.example not found - consider adding environment variables documentation"
fi

# Check for vercel.json
if [ -f "vercel.json" ]; then
    echo "‚úÖ vercel.json found"
else
    echo "‚ö†Ô∏è  vercel.json not found - Vercel deployment may not be optimized"
fi

# Check for README.md
if [ -f "README.md" ]; then
    echo "‚úÖ README.md found"
else
    echo "‚ö†Ô∏è  README.md not found - consider adding project documentation"
fi

# Check build output
if [ -d ".next" ]; then
    echo "‚úÖ .next build directory created"
    
    # Check static files
    if [ -d ".next/static" ]; then
        echo "‚úÖ Static assets generated"
    else
        echo "‚ö†Ô∏è  Static assets directory not found"
    fi
else
    echo "‚ùå .next build directory not found"
    exit 1
fi

# Test production server start (just validate it starts)
echo "üåê Testing production server startup..."
timeout 10s npm start > /dev/null 2>&1 &
server_pid=$!
sleep 3

if kill -0 $server_pid 2>/dev/null; then
    echo "‚úÖ Production server started successfully"
    kill $server_pid 2>/dev/null
else
    echo "‚ùå Production server failed to start"
    exit 1
fi

echo ""
echo "üéâ Deployment readiness check completed successfully!"
echo ""
echo "Next steps for deployment:"
echo "  ‚Ä¢ For Vercel: Connect your GitHub repo to Vercel"
echo "  ‚Ä¢ For Netlify: Connect your repo or drag and drop the .next folder"
echo "  ‚Ä¢ For traditional hosting: Run 'npm start' on your server"
echo ""
echo "Environment setup:"
echo "  ‚Ä¢ Copy .env.example to .env.local and fill in your values"
echo "  ‚Ä¢ Set NODE_ENV=production for production deployments"